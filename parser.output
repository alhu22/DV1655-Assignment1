Terminals unused in grammar

    FLOAT
    DOUBLE
    CHAR
    PRIVATE


State 75 conflicts: 14 reduce/reduce
State 76 conflicts: 14 reduce/reduce
State 77 conflicts: 14 reduce/reduce
State 78 conflicts: 14 reduce/reduce
State 81 conflicts: 14 reduce/reduce
State 91 conflicts: 4 reduce/reduce
State 97 conflicts: 14 reduce/reduce
State 129 conflicts: 14 reduce/reduce
State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: root "end of file"

    1 root: Goal

    2 Goal: MainClass ClassDeclaration_list

    3 ClassDeclaration_list: ε
    4                      | ClassDeclaration ClassDeclaration_list

    5 Type: INTIGER LBRACKET RBRACKET
    6     | BOOLEAN
    7     | INTIGER
    8     | IDENTIFIER

    9 statement: LBRACE statement_list RBRACE
   10          | IF LP expression RP statement
   11          | IF LP expression RP statement ELSE statement
   12          | WHILE LP expression RP statement
   13          | SYSTEM_OUT_PRINTLN LP expression RP SEMICOLON
   14          | IDENTIFIER ASSIGN expression SEMICOLON
   15          | IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON
   16          | Type IDENTIFIER SEMICOLON

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

   18 ClassDeclaration: CLASS IDENTIFIER LBRACE variables MethodDeclaration_list RBRACE

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP parameter_sequence RP LBRACE Methodbody RETURN expression SEMICOLON RBRACE

   20 Methodbody: variables
   21           | statement_list

   22 parameter: Type IDENTIFIER

   23 parameter_list: parameter
   24               | parameter_list COMMA parameter

   25 parameter_sequence: parameter_list
   26                   | ε

   27 expression: expression PLUSOP expression
   28           | expression MINUSOP expression
   29           | expression MULTOP expression
   30           | expression AND expression
   31           | expression OR expression
   32           | expression EQ expression
   33           | expression LT expression
   34           | expression GT expression
   35           | expression LBRACKET expression RBRACKET
   36           | expression DOT length
   37           | expression DOT IDENTIFIER LP expression_sequence RP
   38           | IDENTIFIER
   39           | INT
   40           | TRUE
   41           | FALSE
   42           | THIS
   43           | NEW INTIGER LBRACKET expression RBRACKET
   44           | NEW IDENTIFIER LP RP
   45           | NOT expression
   46           | LP expression RP
   47           | factor

   48 expression_list: expression
   49                | expression_list COMMA expression

   50 expression_sequence: expression_list
   51                    | ε

   52 MethodDeclaration_list: ε
   53                       | MethodDeclaration MethodDeclaration_list

   54 statement_list: statement
   55               | statement statement_list

   56 VarDeclaration: Type IDENTIFIER SEMICOLON

   57 variables: ε
   58          | VarDeclaration variables

   59 factor: INT
   60       | LP expression RP
   61       | IDENTIFIER
   62       | MINUSOP factor
   63       | NOT factor
   64       | TRUE
   65       | FALSE
   66       | THIS


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    SYSTEM_OUT_PRINTLN <std::string> (258) 13
    WHILE <std::string> (259) 12
    PUBLIC <std::string> (260) 17 19
    CLASS <std::string> (261) 17 18
    VOID <std::string> (262) 17
    RETURN <std::string> (263) 19
    STATIC <std::string> (264) 17
    IF <std::string> (265) 10 11
    ELSE <std::string> (266) 11
    NEW <std::string> (267) 43 44
    THIS <std::string> (268) 42 66
    TRUE <std::string> (269) 40 64
    FALSE <std::string> (270) 41 65
    FLOAT <std::string> (271)
    DOUBLE <std::string> (272)
    CHAR <std::string> (273)
    PRIVATE <std::string> (274)
    IDENTIFIER <std::string> (275) 8 14 15 16 17 18 19 22 37 38 44 56 61
    EQ <std::string> (276) 32
    LT <std::string> (277) 33
    GT <std::string> (278) 34
    LBRACE <std::string> (279) 9 17 18 19
    RBRACE <std::string> (280) 9 17 18 19
    SEMICOLON <std::string> (281) 13 14 15 16 19 56
    LBRACKET <std::string> (282) 5 15 17 35 43
    RBRACKET <std::string> (283) 5 15 17 35 43
    ASSIGN <std::string> (284) 14 15
    DOT <std::string> (285) 36 37
    COMMA <std::string> (286) 24 49
    NOT <std::string> (287) 45 63
    AND <std::string> (288) 30
    OR <std::string> (289) 31
    BOOLEAN <std::string> (290) 6
    MAIN <std::string> (291) 17
    STRING <std::string> (292) 17
    INTIGER <std::string> (293) 5 7 43
    PLUSOP <std::string> (294) 27
    MINUSOP <std::string> (295) 28 62
    MULTOP <std::string> (296) 29
    INT <std::string> (297) 39 59
    LP <std::string> (298) 10 11 12 13 17 19 37 44 46 60
    RP <std::string> (299) 10 11 12 13 17 19 37 44 46 60
    length <std::string> (300) 36


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    root <Node *> (47)
        on left: 1
        on right: 0
    Goal <Node *> (48)
        on left: 2
        on right: 1
    ClassDeclaration_list <std::list<Node*>> (49)
        on left: 3 4
        on right: 2 4
    Type <std::string> (50)
        on left: 5 6 7 8
        on right: 16 19 22 56
    statement <Node *> (51)
        on left: 9 10 11 12 13 14 15 16
        on right: 10 11 12 54 55
    MainClass <Node *> (52)
        on left: 17
        on right: 2
    ClassDeclaration <Node *> (53)
        on left: 18
        on right: 4
    MethodDeclaration <Node *> (54)
        on left: 19
        on right: 53
    Methodbody <std::list<Node*>> (55)
        on left: 20 21
        on right: 19
    parameter <Node *> (56)
        on left: 22
        on right: 23 24
    parameter_list <std::list<Node*>> (57)
        on left: 23 24
        on right: 24 25
    parameter_sequence <std::list<Node*>> (58)
        on left: 25 26
        on right: 19
    expression <Node *> (59)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
        on right: 10 11 12 13 14 15 19 27 28 29 30 31 32 33 34 35 36 37 43 45 46 48 49 60
    expression_list <std::list<Node*>> (60)
        on left: 48 49
        on right: 49 50
    expression_sequence <std::list<Node*>> (61)
        on left: 50 51
        on right: 37
    MethodDeclaration_list <std::list<Node*>> (62)
        on left: 52 53
        on right: 18 53
    statement_list <std::list<Node*>> (63)
        on left: 54 55
        on right: 9 17 21 55
    VarDeclaration <Node *> (64)
        on left: 56
        on right: 58
    variables <std::list<Node*>> (65)
        on left: 57 58
        on right: 18 20 58
    factor <Node *> (66)
        on left: 59 60 61 62 63 64 65 66
        on right: 47 62 63


State 0

    0 $accept: • root "end of file"

    PUBLIC  shift, and go to state 1

    root       go to state 2
    Goal       go to state 3
    MainClass  go to state 4


State 1

   17 MainClass: PUBLIC • CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    CLASS  shift, and go to state 5


State 2

    0 $accept: root • "end of file"

    "end of file"  shift, and go to state 6


State 3

    1 root: Goal •

    $default  reduce using rule 1 (root)


State 4

    2 Goal: MainClass • ClassDeclaration_list

    CLASS  shift, and go to state 7

    $default  reduce using rule 3 (ClassDeclaration_list)

    ClassDeclaration_list  go to state 8
    ClassDeclaration       go to state 9


State 5

   17 MainClass: PUBLIC CLASS • IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    IDENTIFIER  shift, and go to state 10


State 6

    0 $accept: root "end of file" •

    $default  accept


State 7

   18 ClassDeclaration: CLASS • IDENTIFIER LBRACE variables MethodDeclaration_list RBRACE

    IDENTIFIER  shift, and go to state 11


State 8

    2 Goal: MainClass ClassDeclaration_list •

    $default  reduce using rule 2 (Goal)


State 9

    4 ClassDeclaration_list: ClassDeclaration • ClassDeclaration_list

    CLASS  shift, and go to state 7

    $default  reduce using rule 3 (ClassDeclaration_list)

    ClassDeclaration_list  go to state 12
    ClassDeclaration       go to state 9


State 10

   17 MainClass: PUBLIC CLASS IDENTIFIER • LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    LBRACE  shift, and go to state 13


State 11

   18 ClassDeclaration: CLASS IDENTIFIER • LBRACE variables MethodDeclaration_list RBRACE

    LBRACE  shift, and go to state 14


State 12

    4 ClassDeclaration_list: ClassDeclaration ClassDeclaration_list •

    $default  reduce using rule 4 (ClassDeclaration_list)


State 13

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE • PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    PUBLIC  shift, and go to state 15


State 14

   18 ClassDeclaration: CLASS IDENTIFIER LBRACE • variables MethodDeclaration_list RBRACE

    IDENTIFIER  shift, and go to state 16
    BOOLEAN     shift, and go to state 17
    INTIGER     shift, and go to state 18

    $default  reduce using rule 57 (variables)

    Type            go to state 19
    VarDeclaration  go to state 20
    variables       go to state 21


State 15

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC • STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    STATIC  shift, and go to state 22


State 16

    8 Type: IDENTIFIER •

    $default  reduce using rule 8 (Type)


State 17

    6 Type: BOOLEAN •

    $default  reduce using rule 6 (Type)


State 18

    5 Type: INTIGER • LBRACKET RBRACKET
    7     | INTIGER •

    LBRACKET  shift, and go to state 23

    $default  reduce using rule 7 (Type)


State 19

   56 VarDeclaration: Type • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 24


State 20

   58 variables: VarDeclaration • variables

    IDENTIFIER  shift, and go to state 16
    BOOLEAN     shift, and go to state 17
    INTIGER     shift, and go to state 18

    $default  reduce using rule 57 (variables)

    Type            go to state 19
    VarDeclaration  go to state 20
    variables       go to state 25


State 21

   18 ClassDeclaration: CLASS IDENTIFIER LBRACE variables • MethodDeclaration_list RBRACE

    PUBLIC  shift, and go to state 26

    $default  reduce using rule 52 (MethodDeclaration_list)

    MethodDeclaration       go to state 27
    MethodDeclaration_list  go to state 28


State 22

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC • VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    VOID  shift, and go to state 29


State 23

    5 Type: INTIGER LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 30


State 24

   56 VarDeclaration: Type IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 31


State 25

   58 variables: VarDeclaration variables •

    $default  reduce using rule 58 (variables)


State 26

   19 MethodDeclaration: PUBLIC • Type IDENTIFIER LP parameter_sequence RP LBRACE Methodbody RETURN expression SEMICOLON RBRACE

    IDENTIFIER  shift, and go to state 16
    BOOLEAN     shift, and go to state 17
    INTIGER     shift, and go to state 18

    Type  go to state 32


State 27

   53 MethodDeclaration_list: MethodDeclaration • MethodDeclaration_list

    PUBLIC  shift, and go to state 26

    $default  reduce using rule 52 (MethodDeclaration_list)

    MethodDeclaration       go to state 27
    MethodDeclaration_list  go to state 33


State 28

   18 ClassDeclaration: CLASS IDENTIFIER LBRACE variables MethodDeclaration_list • RBRACE

    RBRACE  shift, and go to state 34


State 29

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID • MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    MAIN  shift, and go to state 35


State 30

    5 Type: INTIGER LBRACKET RBRACKET •

    $default  reduce using rule 5 (Type)


State 31

   56 VarDeclaration: Type IDENTIFIER SEMICOLON •

    $default  reduce using rule 56 (VarDeclaration)


State 32

   19 MethodDeclaration: PUBLIC Type • IDENTIFIER LP parameter_sequence RP LBRACE Methodbody RETURN expression SEMICOLON RBRACE

    IDENTIFIER  shift, and go to state 36


State 33

   53 MethodDeclaration_list: MethodDeclaration MethodDeclaration_list •

    $default  reduce using rule 53 (MethodDeclaration_list)


State 34

   18 ClassDeclaration: CLASS IDENTIFIER LBRACE variables MethodDeclaration_list RBRACE •

    $default  reduce using rule 18 (ClassDeclaration)


State 35

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN • LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    LP  shift, and go to state 37


State 36

   19 MethodDeclaration: PUBLIC Type IDENTIFIER • LP parameter_sequence RP LBRACE Methodbody RETURN expression SEMICOLON RBRACE

    LP  shift, and go to state 38


State 37

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP • STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    STRING  shift, and go to state 39


State 38

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP • parameter_sequence RP LBRACE Methodbody RETURN expression SEMICOLON RBRACE

    IDENTIFIER  shift, and go to state 16
    BOOLEAN     shift, and go to state 17
    INTIGER     shift, and go to state 18

    $default  reduce using rule 26 (parameter_sequence)

    Type                go to state 40
    parameter           go to state 41
    parameter_list      go to state 42
    parameter_sequence  go to state 43


State 39

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING • LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    LBRACKET  shift, and go to state 44


State 40

   22 parameter: Type • IDENTIFIER

    IDENTIFIER  shift, and go to state 45


State 41

   23 parameter_list: parameter •

    $default  reduce using rule 23 (parameter_list)


State 42

   24 parameter_list: parameter_list • COMMA parameter
   25 parameter_sequence: parameter_list •

    COMMA  shift, and go to state 46

    $default  reduce using rule 25 (parameter_sequence)


State 43

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP parameter_sequence • RP LBRACE Methodbody RETURN expression SEMICOLON RBRACE

    RP  shift, and go to state 47


State 44

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET • RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    RBRACKET  shift, and go to state 48


State 45

   22 parameter: Type IDENTIFIER •

    $default  reduce using rule 22 (parameter)


State 46

   24 parameter_list: parameter_list COMMA • parameter

    IDENTIFIER  shift, and go to state 16
    BOOLEAN     shift, and go to state 17
    INTIGER     shift, and go to state 18

    Type       go to state 40
    parameter  go to state 49


State 47

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP parameter_sequence RP • LBRACE Methodbody RETURN expression SEMICOLON RBRACE

    LBRACE  shift, and go to state 50


State 48

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET • IDENTIFIER RP LBRACE statement_list RBRACE RBRACE

    IDENTIFIER  shift, and go to state 51


State 49

   24 parameter_list: parameter_list COMMA parameter •

    $default  reduce using rule 24 (parameter_list)


State 50

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP parameter_sequence RP LBRACE • Methodbody RETURN expression SEMICOLON RBRACE

    SYSTEM_OUT_PRINTLN  shift, and go to state 52
    WHILE               shift, and go to state 53
    IF                  shift, and go to state 54
    IDENTIFIER          shift, and go to state 55
    LBRACE              shift, and go to state 56
    BOOLEAN             shift, and go to state 17
    INTIGER             shift, and go to state 18

    $default  reduce using rule 57 (variables)

    Type            go to state 57
    statement       go to state 58
    Methodbody      go to state 59
    statement_list  go to state 60
    VarDeclaration  go to state 20
    variables       go to state 61


State 51

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER • RP LBRACE statement_list RBRACE RBRACE

    RP  shift, and go to state 62


State 52

   13 statement: SYSTEM_OUT_PRINTLN • LP expression RP SEMICOLON

    LP  shift, and go to state 63


State 53

   12 statement: WHILE • LP expression RP statement

    LP  shift, and go to state 64


State 54

   10 statement: IF • LP expression RP statement
   11          | IF • LP expression RP statement ELSE statement

    LP  shift, and go to state 65


State 55

    8 Type: IDENTIFIER •
   14 statement: IDENTIFIER • ASSIGN expression SEMICOLON
   15          | IDENTIFIER • LBRACKET expression RBRACKET ASSIGN expression SEMICOLON

    LBRACKET  shift, and go to state 66
    ASSIGN    shift, and go to state 67

    $default  reduce using rule 8 (Type)


State 56

    9 statement: LBRACE • statement_list RBRACE

    SYSTEM_OUT_PRINTLN  shift, and go to state 52
    WHILE               shift, and go to state 53
    IF                  shift, and go to state 54
    IDENTIFIER          shift, and go to state 55
    LBRACE              shift, and go to state 56
    BOOLEAN             shift, and go to state 17
    INTIGER             shift, and go to state 18

    Type            go to state 68
    statement       go to state 58
    statement_list  go to state 69


State 57

   16 statement: Type • IDENTIFIER SEMICOLON
   56 VarDeclaration: Type • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 70


State 58

   54 statement_list: statement •
   55               | statement • statement_list

    SYSTEM_OUT_PRINTLN  shift, and go to state 52
    WHILE               shift, and go to state 53
    IF                  shift, and go to state 54
    IDENTIFIER          shift, and go to state 55
    LBRACE              shift, and go to state 56
    BOOLEAN             shift, and go to state 17
    INTIGER             shift, and go to state 18

    $default  reduce using rule 54 (statement_list)

    Type            go to state 68
    statement       go to state 58
    statement_list  go to state 71


State 59

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP parameter_sequence RP LBRACE Methodbody • RETURN expression SEMICOLON RBRACE

    RETURN  shift, and go to state 72


State 60

   21 Methodbody: statement_list •

    $default  reduce using rule 21 (Methodbody)


State 61

   20 Methodbody: variables •

    $default  reduce using rule 20 (Methodbody)


State 62

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP • LBRACE statement_list RBRACE RBRACE

    LBRACE  shift, and go to state 73


State 63

   13 statement: SYSTEM_OUT_PRINTLN LP • expression RP SEMICOLON

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 83
    factor      go to state 84


State 64

   12 statement: WHILE LP • expression RP statement

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 85
    factor      go to state 84


State 65

   10 statement: IF LP • expression RP statement
   11          | IF LP • expression RP statement ELSE statement

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 86
    factor      go to state 84


State 66

   15 statement: IDENTIFIER LBRACKET • expression RBRACKET ASSIGN expression SEMICOLON

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 87
    factor      go to state 84


State 67

   14 statement: IDENTIFIER ASSIGN • expression SEMICOLON

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 88
    factor      go to state 84


State 68

   16 statement: Type • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 89


State 69

    9 statement: LBRACE statement_list • RBRACE

    RBRACE  shift, and go to state 90


State 70

   16 statement: Type IDENTIFIER • SEMICOLON
   56 VarDeclaration: Type IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 91


State 71

   55 statement_list: statement statement_list •

    $default  reduce using rule 55 (statement_list)


State 72

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP parameter_sequence RP LBRACE Methodbody RETURN • expression SEMICOLON RBRACE

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 92
    factor      go to state 84


State 73

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE • statement_list RBRACE RBRACE

    SYSTEM_OUT_PRINTLN  shift, and go to state 52
    WHILE               shift, and go to state 53
    IF                  shift, and go to state 54
    IDENTIFIER          shift, and go to state 55
    LBRACE              shift, and go to state 56
    BOOLEAN             shift, and go to state 17
    INTIGER             shift, and go to state 18

    Type            go to state 68
    statement       go to state 58
    statement_list  go to state 93


State 74

   43 expression: NEW • INTIGER LBRACKET expression RBRACKET
   44           | NEW • IDENTIFIER LP RP

    IDENTIFIER  shift, and go to state 94
    INTIGER     shift, and go to state 95


State 75

   42 expression: THIS •
   66 factor: THIS •

    EQ         reduce using rule 42 (expression)
    EQ         [reduce using rule 66 (factor)]
    LT         reduce using rule 42 (expression)
    LT         [reduce using rule 66 (factor)]
    GT         reduce using rule 42 (expression)
    GT         [reduce using rule 66 (factor)]
    SEMICOLON  reduce using rule 42 (expression)
    SEMICOLON  [reduce using rule 66 (factor)]
    LBRACKET   reduce using rule 42 (expression)
    LBRACKET   [reduce using rule 66 (factor)]
    RBRACKET   reduce using rule 42 (expression)
    RBRACKET   [reduce using rule 66 (factor)]
    DOT        reduce using rule 42 (expression)
    DOT        [reduce using rule 66 (factor)]
    COMMA      reduce using rule 42 (expression)
    COMMA      [reduce using rule 66 (factor)]
    AND        reduce using rule 42 (expression)
    AND        [reduce using rule 66 (factor)]
    OR         reduce using rule 42 (expression)
    OR         [reduce using rule 66 (factor)]
    PLUSOP     reduce using rule 42 (expression)
    PLUSOP     [reduce using rule 66 (factor)]
    MINUSOP    reduce using rule 42 (expression)
    MINUSOP    [reduce using rule 66 (factor)]
    MULTOP     reduce using rule 42 (expression)
    MULTOP     [reduce using rule 66 (factor)]
    RP         reduce using rule 42 (expression)
    RP         [reduce using rule 66 (factor)]
    $default   reduce using rule 42 (expression)


State 76

   40 expression: TRUE •
   64 factor: TRUE •

    EQ         reduce using rule 40 (expression)
    EQ         [reduce using rule 64 (factor)]
    LT         reduce using rule 40 (expression)
    LT         [reduce using rule 64 (factor)]
    GT         reduce using rule 40 (expression)
    GT         [reduce using rule 64 (factor)]
    SEMICOLON  reduce using rule 40 (expression)
    SEMICOLON  [reduce using rule 64 (factor)]
    LBRACKET   reduce using rule 40 (expression)
    LBRACKET   [reduce using rule 64 (factor)]
    RBRACKET   reduce using rule 40 (expression)
    RBRACKET   [reduce using rule 64 (factor)]
    DOT        reduce using rule 40 (expression)
    DOT        [reduce using rule 64 (factor)]
    COMMA      reduce using rule 40 (expression)
    COMMA      [reduce using rule 64 (factor)]
    AND        reduce using rule 40 (expression)
    AND        [reduce using rule 64 (factor)]
    OR         reduce using rule 40 (expression)
    OR         [reduce using rule 64 (factor)]
    PLUSOP     reduce using rule 40 (expression)
    PLUSOP     [reduce using rule 64 (factor)]
    MINUSOP    reduce using rule 40 (expression)
    MINUSOP    [reduce using rule 64 (factor)]
    MULTOP     reduce using rule 40 (expression)
    MULTOP     [reduce using rule 64 (factor)]
    RP         reduce using rule 40 (expression)
    RP         [reduce using rule 64 (factor)]
    $default   reduce using rule 40 (expression)


State 77

   41 expression: FALSE •
   65 factor: FALSE •

    EQ         reduce using rule 41 (expression)
    EQ         [reduce using rule 65 (factor)]
    LT         reduce using rule 41 (expression)
    LT         [reduce using rule 65 (factor)]
    GT         reduce using rule 41 (expression)
    GT         [reduce using rule 65 (factor)]
    SEMICOLON  reduce using rule 41 (expression)
    SEMICOLON  [reduce using rule 65 (factor)]
    LBRACKET   reduce using rule 41 (expression)
    LBRACKET   [reduce using rule 65 (factor)]
    RBRACKET   reduce using rule 41 (expression)
    RBRACKET   [reduce using rule 65 (factor)]
    DOT        reduce using rule 41 (expression)
    DOT        [reduce using rule 65 (factor)]
    COMMA      reduce using rule 41 (expression)
    COMMA      [reduce using rule 65 (factor)]
    AND        reduce using rule 41 (expression)
    AND        [reduce using rule 65 (factor)]
    OR         reduce using rule 41 (expression)
    OR         [reduce using rule 65 (factor)]
    PLUSOP     reduce using rule 41 (expression)
    PLUSOP     [reduce using rule 65 (factor)]
    MINUSOP    reduce using rule 41 (expression)
    MINUSOP    [reduce using rule 65 (factor)]
    MULTOP     reduce using rule 41 (expression)
    MULTOP     [reduce using rule 65 (factor)]
    RP         reduce using rule 41 (expression)
    RP         [reduce using rule 65 (factor)]
    $default   reduce using rule 41 (expression)


State 78

   38 expression: IDENTIFIER •
   61 factor: IDENTIFIER •

    EQ         reduce using rule 38 (expression)
    EQ         [reduce using rule 61 (factor)]
    LT         reduce using rule 38 (expression)
    LT         [reduce using rule 61 (factor)]
    GT         reduce using rule 38 (expression)
    GT         [reduce using rule 61 (factor)]
    SEMICOLON  reduce using rule 38 (expression)
    SEMICOLON  [reduce using rule 61 (factor)]
    LBRACKET   reduce using rule 38 (expression)
    LBRACKET   [reduce using rule 61 (factor)]
    RBRACKET   reduce using rule 38 (expression)
    RBRACKET   [reduce using rule 61 (factor)]
    DOT        reduce using rule 38 (expression)
    DOT        [reduce using rule 61 (factor)]
    COMMA      reduce using rule 38 (expression)
    COMMA      [reduce using rule 61 (factor)]
    AND        reduce using rule 38 (expression)
    AND        [reduce using rule 61 (factor)]
    OR         reduce using rule 38 (expression)
    OR         [reduce using rule 61 (factor)]
    PLUSOP     reduce using rule 38 (expression)
    PLUSOP     [reduce using rule 61 (factor)]
    MINUSOP    reduce using rule 38 (expression)
    MINUSOP    [reduce using rule 61 (factor)]
    MULTOP     reduce using rule 38 (expression)
    MULTOP     [reduce using rule 61 (factor)]
    RP         reduce using rule 38 (expression)
    RP         [reduce using rule 61 (factor)]
    $default   reduce using rule 38 (expression)


State 79

   45 expression: NOT • expression
   63 factor: NOT • factor

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 96
    factor      go to state 97


State 80

   62 factor: MINUSOP • factor

    THIS        shift, and go to state 98
    TRUE        shift, and go to state 99
    FALSE       shift, and go to state 100
    IDENTIFIER  shift, and go to state 101
    NOT         shift, and go to state 102
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 103
    LP          shift, and go to state 104

    factor  go to state 105


State 81

   39 expression: INT •
   59 factor: INT •

    EQ         reduce using rule 39 (expression)
    EQ         [reduce using rule 59 (factor)]
    LT         reduce using rule 39 (expression)
    LT         [reduce using rule 59 (factor)]
    GT         reduce using rule 39 (expression)
    GT         [reduce using rule 59 (factor)]
    SEMICOLON  reduce using rule 39 (expression)
    SEMICOLON  [reduce using rule 59 (factor)]
    LBRACKET   reduce using rule 39 (expression)
    LBRACKET   [reduce using rule 59 (factor)]
    RBRACKET   reduce using rule 39 (expression)
    RBRACKET   [reduce using rule 59 (factor)]
    DOT        reduce using rule 39 (expression)
    DOT        [reduce using rule 59 (factor)]
    COMMA      reduce using rule 39 (expression)
    COMMA      [reduce using rule 59 (factor)]
    AND        reduce using rule 39 (expression)
    AND        [reduce using rule 59 (factor)]
    OR         reduce using rule 39 (expression)
    OR         [reduce using rule 59 (factor)]
    PLUSOP     reduce using rule 39 (expression)
    PLUSOP     [reduce using rule 59 (factor)]
    MINUSOP    reduce using rule 39 (expression)
    MINUSOP    [reduce using rule 59 (factor)]
    MULTOP     reduce using rule 39 (expression)
    MULTOP     [reduce using rule 59 (factor)]
    RP         reduce using rule 39 (expression)
    RP         [reduce using rule 59 (factor)]
    $default   reduce using rule 39 (expression)


State 82

   46 expression: LP • expression RP
   60 factor: LP • expression RP

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 106
    factor      go to state 84


State 83

   13 statement: SYSTEM_OUT_PRINTLN LP expression • RP SEMICOLON
   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116
    RP        shift, and go to state 117


State 84

   47 expression: factor •

    $default  reduce using rule 47 (expression)


State 85

   12 statement: WHILE LP expression • RP statement
   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116
    RP        shift, and go to state 118


State 86

   10 statement: IF LP expression • RP statement
   11          | IF LP expression • RP statement ELSE statement
   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116
    RP        shift, and go to state 119


State 87

   15 statement: IDENTIFIER LBRACKET expression • RBRACKET ASSIGN expression SEMICOLON
   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    RBRACKET  shift, and go to state 120
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116


State 88

   14 statement: IDENTIFIER ASSIGN expression • SEMICOLON
   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ         shift, and go to state 107
    LT         shift, and go to state 108
    GT         shift, and go to state 109
    SEMICOLON  shift, and go to state 121
    LBRACKET   shift, and go to state 110
    DOT        shift, and go to state 111
    AND        shift, and go to state 112
    OR         shift, and go to state 113
    PLUSOP     shift, and go to state 114
    MINUSOP    shift, and go to state 115
    MULTOP     shift, and go to state 116


State 89

   16 statement: Type IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 122


State 90

    9 statement: LBRACE statement_list RBRACE •

    $default  reduce using rule 9 (statement)


State 91

   16 statement: Type IDENTIFIER SEMICOLON •
   56 VarDeclaration: Type IDENTIFIER SEMICOLON •

    RETURN      reduce using rule 16 (statement)
    RETURN      [reduce using rule 56 (VarDeclaration)]
    IDENTIFIER  reduce using rule 16 (statement)
    IDENTIFIER  [reduce using rule 56 (VarDeclaration)]
    BOOLEAN     reduce using rule 16 (statement)
    BOOLEAN     [reduce using rule 56 (VarDeclaration)]
    INTIGER     reduce using rule 16 (statement)
    INTIGER     [reduce using rule 56 (VarDeclaration)]
    $default    reduce using rule 16 (statement)


State 92

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP parameter_sequence RP LBRACE Methodbody RETURN expression • SEMICOLON RBRACE
   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ         shift, and go to state 107
    LT         shift, and go to state 108
    GT         shift, and go to state 109
    SEMICOLON  shift, and go to state 123
    LBRACKET   shift, and go to state 110
    DOT        shift, and go to state 111
    AND        shift, and go to state 112
    OR         shift, and go to state 113
    PLUSOP     shift, and go to state 114
    MINUSOP    shift, and go to state 115
    MULTOP     shift, and go to state 116


State 93

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list • RBRACE RBRACE

    RBRACE  shift, and go to state 124


State 94

   44 expression: NEW IDENTIFIER • LP RP

    LP  shift, and go to state 125


State 95

   43 expression: NEW INTIGER • LBRACKET expression RBRACKET

    LBRACKET  shift, and go to state 126


State 96

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP
   45           | NOT expression •

    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111

    $default  reduce using rule 45 (expression)


State 97

   47 expression: factor •
   63 factor: NOT factor •

    EQ         reduce using rule 47 (expression)
    EQ         [reduce using rule 63 (factor)]
    LT         reduce using rule 47 (expression)
    LT         [reduce using rule 63 (factor)]
    GT         reduce using rule 47 (expression)
    GT         [reduce using rule 63 (factor)]
    SEMICOLON  reduce using rule 47 (expression)
    SEMICOLON  [reduce using rule 63 (factor)]
    LBRACKET   reduce using rule 47 (expression)
    LBRACKET   [reduce using rule 63 (factor)]
    RBRACKET   reduce using rule 47 (expression)
    RBRACKET   [reduce using rule 63 (factor)]
    DOT        reduce using rule 47 (expression)
    DOT        [reduce using rule 63 (factor)]
    COMMA      reduce using rule 47 (expression)
    COMMA      [reduce using rule 63 (factor)]
    AND        reduce using rule 47 (expression)
    AND        [reduce using rule 63 (factor)]
    OR         reduce using rule 47 (expression)
    OR         [reduce using rule 63 (factor)]
    PLUSOP     reduce using rule 47 (expression)
    PLUSOP     [reduce using rule 63 (factor)]
    MINUSOP    reduce using rule 47 (expression)
    MINUSOP    [reduce using rule 63 (factor)]
    MULTOP     reduce using rule 47 (expression)
    MULTOP     [reduce using rule 63 (factor)]
    RP         reduce using rule 47 (expression)
    RP         [reduce using rule 63 (factor)]
    $default   reduce using rule 47 (expression)


State 98

   66 factor: THIS •

    $default  reduce using rule 66 (factor)


State 99

   64 factor: TRUE •

    $default  reduce using rule 64 (factor)


State 100

   65 factor: FALSE •

    $default  reduce using rule 65 (factor)


State 101

   61 factor: IDENTIFIER •

    $default  reduce using rule 61 (factor)


State 102

   63 factor: NOT • factor

    THIS        shift, and go to state 98
    TRUE        shift, and go to state 99
    FALSE       shift, and go to state 100
    IDENTIFIER  shift, and go to state 101
    NOT         shift, and go to state 102
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 103
    LP          shift, and go to state 104

    factor  go to state 127


State 103

   59 factor: INT •

    $default  reduce using rule 59 (factor)


State 104

   60 factor: LP • expression RP

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 128
    factor      go to state 84


State 105

   62 factor: MINUSOP factor •

    $default  reduce using rule 62 (factor)


State 106

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP
   46           | LP expression • RP
   60 factor: LP expression • RP

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116
    RP        shift, and go to state 129


State 107

   32 expression: expression EQ • expression

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 130
    factor      go to state 84


State 108

   33 expression: expression LT • expression

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 131
    factor      go to state 84


State 109

   34 expression: expression GT • expression

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 132
    factor      go to state 84


State 110

   35 expression: expression LBRACKET • expression RBRACKET

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 133
    factor      go to state 84


State 111

   36 expression: expression DOT • length
   37           | expression DOT • IDENTIFIER LP expression_sequence RP

    IDENTIFIER  shift, and go to state 134
    length      shift, and go to state 135


State 112

   30 expression: expression AND • expression

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 136
    factor      go to state 84


State 113

   31 expression: expression OR • expression

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 137
    factor      go to state 84


State 114

   27 expression: expression PLUSOP • expression

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 138
    factor      go to state 84


State 115

   28 expression: expression MINUSOP • expression

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 139
    factor      go to state 84


State 116

   29 expression: expression MULTOP • expression

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 140
    factor      go to state 84


State 117

   13 statement: SYSTEM_OUT_PRINTLN LP expression RP • SEMICOLON

    SEMICOLON  shift, and go to state 141


State 118

   12 statement: WHILE LP expression RP • statement

    SYSTEM_OUT_PRINTLN  shift, and go to state 52
    WHILE               shift, and go to state 53
    IF                  shift, and go to state 54
    IDENTIFIER          shift, and go to state 55
    LBRACE              shift, and go to state 56
    BOOLEAN             shift, and go to state 17
    INTIGER             shift, and go to state 18

    Type       go to state 68
    statement  go to state 142


State 119

   10 statement: IF LP expression RP • statement
   11          | IF LP expression RP • statement ELSE statement

    SYSTEM_OUT_PRINTLN  shift, and go to state 52
    WHILE               shift, and go to state 53
    IF                  shift, and go to state 54
    IDENTIFIER          shift, and go to state 55
    LBRACE              shift, and go to state 56
    BOOLEAN             shift, and go to state 17
    INTIGER             shift, and go to state 18

    Type       go to state 68
    statement  go to state 143


State 120

   15 statement: IDENTIFIER LBRACKET expression RBRACKET • ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 144


State 121

   14 statement: IDENTIFIER ASSIGN expression SEMICOLON •

    $default  reduce using rule 14 (statement)


State 122

   16 statement: Type IDENTIFIER SEMICOLON •

    $default  reduce using rule 16 (statement)


State 123

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP parameter_sequence RP LBRACE Methodbody RETURN expression SEMICOLON • RBRACE

    RBRACE  shift, and go to state 145


State 124

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE • RBRACE

    RBRACE  shift, and go to state 146


State 125

   44 expression: NEW IDENTIFIER LP • RP

    RP  shift, and go to state 147


State 126

   43 expression: NEW INTIGER LBRACKET • expression RBRACKET

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 148
    factor      go to state 84


State 127

   63 factor: NOT factor •

    $default  reduce using rule 63 (factor)


State 128

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP
   60 factor: LP expression • RP

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116
    RP        shift, and go to state 149


State 129

   46 expression: LP expression RP •
   60 factor: LP expression RP •

    EQ         reduce using rule 46 (expression)
    EQ         [reduce using rule 60 (factor)]
    LT         reduce using rule 46 (expression)
    LT         [reduce using rule 60 (factor)]
    GT         reduce using rule 46 (expression)
    GT         [reduce using rule 60 (factor)]
    SEMICOLON  reduce using rule 46 (expression)
    SEMICOLON  [reduce using rule 60 (factor)]
    LBRACKET   reduce using rule 46 (expression)
    LBRACKET   [reduce using rule 60 (factor)]
    RBRACKET   reduce using rule 46 (expression)
    RBRACKET   [reduce using rule 60 (factor)]
    DOT        reduce using rule 46 (expression)
    DOT        [reduce using rule 60 (factor)]
    COMMA      reduce using rule 46 (expression)
    COMMA      [reduce using rule 60 (factor)]
    AND        reduce using rule 46 (expression)
    AND        [reduce using rule 60 (factor)]
    OR         reduce using rule 46 (expression)
    OR         [reduce using rule 60 (factor)]
    PLUSOP     reduce using rule 46 (expression)
    PLUSOP     [reduce using rule 60 (factor)]
    MINUSOP    reduce using rule 46 (expression)
    MINUSOP    [reduce using rule 60 (factor)]
    MULTOP     reduce using rule 46 (expression)
    MULTOP     [reduce using rule 60 (factor)]
    RP         reduce using rule 46 (expression)
    RP         [reduce using rule 60 (factor)]
    $default   reduce using rule 46 (expression)


State 130

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   32           | expression EQ expression •
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116

    $default  reduce using rule 32 (expression)


State 131

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   33           | expression LT expression •
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116

    $default  reduce using rule 33 (expression)


State 132

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   34           | expression GT expression •
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116

    $default  reduce using rule 34 (expression)


State 133

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   35           | expression LBRACKET expression • RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    RBRACKET  shift, and go to state 150
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116


State 134

   37 expression: expression DOT IDENTIFIER • LP expression_sequence RP

    LP  shift, and go to state 151


State 135

   36 expression: expression DOT length •

    $default  reduce using rule 36 (expression)


State 136

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   30           | expression AND expression •
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116

    $default  reduce using rule 30 (expression)


State 137

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   31           | expression OR expression •
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116

    $default  reduce using rule 31 (expression)


State 138

   27 expression: expression • PLUSOP expression
   27           | expression PLUSOP expression •
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    MULTOP    shift, and go to state 116

    $default  reduce using rule 27 (expression)


State 139

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   28           | expression MINUSOP expression •
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    MULTOP    shift, and go to state 116

    $default  reduce using rule 28 (expression)


State 140

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   29           | expression MULTOP expression •
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111

    $default  reduce using rule 29 (expression)


State 141

   13 statement: SYSTEM_OUT_PRINTLN LP expression RP SEMICOLON •

    $default  reduce using rule 13 (statement)


State 142

   12 statement: WHILE LP expression RP statement •

    $default  reduce using rule 12 (statement)


State 143

   10 statement: IF LP expression RP statement •
   11          | IF LP expression RP statement • ELSE statement

    ELSE  shift, and go to state 152

    ELSE      [reduce using rule 10 (statement)]
    $default  reduce using rule 10 (statement)


State 144

   15 statement: IDENTIFIER LBRACKET expression RBRACKET ASSIGN • expression SEMICOLON

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 153
    factor      go to state 84


State 145

   19 MethodDeclaration: PUBLIC Type IDENTIFIER LP parameter_sequence RP LBRACE Methodbody RETURN expression SEMICOLON RBRACE •

    $default  reduce using rule 19 (MethodDeclaration)


State 146

   17 MainClass: PUBLIC CLASS IDENTIFIER LBRACE PUBLIC STATIC VOID MAIN LP STRING LBRACKET RBRACKET IDENTIFIER RP LBRACE statement_list RBRACE RBRACE •

    $default  reduce using rule 17 (MainClass)


State 147

   44 expression: NEW IDENTIFIER LP RP •

    $default  reduce using rule 44 (expression)


State 148

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP
   43           | NEW INTIGER LBRACKET expression • RBRACKET

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    RBRACKET  shift, and go to state 154
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116


State 149

   60 factor: LP expression RP •

    $default  reduce using rule 60 (factor)


State 150

   35 expression: expression LBRACKET expression RBRACKET •

    $default  reduce using rule 35 (expression)


State 151

   37 expression: expression DOT IDENTIFIER LP • expression_sequence RP

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    $default  reduce using rule 51 (expression_sequence)

    expression           go to state 155
    expression_list      go to state 156
    expression_sequence  go to state 157
    factor               go to state 84


State 152

   11 statement: IF LP expression RP statement ELSE • statement

    SYSTEM_OUT_PRINTLN  shift, and go to state 52
    WHILE               shift, and go to state 53
    IF                  shift, and go to state 54
    IDENTIFIER          shift, and go to state 55
    LBRACE              shift, and go to state 56
    BOOLEAN             shift, and go to state 17
    INTIGER             shift, and go to state 18

    Type       go to state 68
    statement  go to state 158


State 153

   15 statement: IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression • SEMICOLON
   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP

    EQ         shift, and go to state 107
    LT         shift, and go to state 108
    GT         shift, and go to state 109
    SEMICOLON  shift, and go to state 159
    LBRACKET   shift, and go to state 110
    DOT        shift, and go to state 111
    AND        shift, and go to state 112
    OR         shift, and go to state 113
    PLUSOP     shift, and go to state 114
    MINUSOP    shift, and go to state 115
    MULTOP     shift, and go to state 116


State 154

   43 expression: NEW INTIGER LBRACKET expression RBRACKET •

    $default  reduce using rule 43 (expression)


State 155

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP
   48 expression_list: expression •

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116

    $default  reduce using rule 48 (expression_list)


State 156

   49 expression_list: expression_list • COMMA expression
   50 expression_sequence: expression_list •

    COMMA  shift, and go to state 160

    $default  reduce using rule 50 (expression_sequence)


State 157

   37 expression: expression DOT IDENTIFIER LP expression_sequence • RP

    RP  shift, and go to state 161


State 158

   11 statement: IF LP expression RP statement ELSE statement •

    $default  reduce using rule 11 (statement)


State 159

   15 statement: IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression SEMICOLON •

    $default  reduce using rule 15 (statement)


State 160

   49 expression_list: expression_list COMMA • expression

    NEW         shift, and go to state 74
    THIS        shift, and go to state 75
    TRUE        shift, and go to state 76
    FALSE       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    NOT         shift, and go to state 79
    MINUSOP     shift, and go to state 80
    INT         shift, and go to state 81
    LP          shift, and go to state 82

    expression  go to state 162
    factor      go to state 84


State 161

   37 expression: expression DOT IDENTIFIER LP expression_sequence RP •

    $default  reduce using rule 37 (expression)


State 162

   27 expression: expression • PLUSOP expression
   28           | expression • MINUSOP expression
   29           | expression • MULTOP expression
   30           | expression • AND expression
   31           | expression • OR expression
   32           | expression • EQ expression
   33           | expression • LT expression
   34           | expression • GT expression
   35           | expression • LBRACKET expression RBRACKET
   36           | expression • DOT length
   37           | expression • DOT IDENTIFIER LP expression_sequence RP
   49 expression_list: expression_list COMMA expression •

    EQ        shift, and go to state 107
    LT        shift, and go to state 108
    GT        shift, and go to state 109
    LBRACKET  shift, and go to state 110
    DOT       shift, and go to state 111
    AND       shift, and go to state 112
    OR        shift, and go to state 113
    PLUSOP    shift, and go to state 114
    MINUSOP   shift, and go to state 115
    MULTOP    shift, and go to state 116

    $default  reduce using rule 49 (expression_list)
